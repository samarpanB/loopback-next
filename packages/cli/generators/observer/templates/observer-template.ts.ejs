import {bind} from '@loopback/context';
import {
  /* inject, Application, CoreBindings, */
  CoreTags,
  LifeCycleObserver,
} from '@loopback/core';

/**
 * This class will be bound to the application as a `LifeCycleObserver` during
 * `boot`
 */
@bind({tags: {[CoreTags.LIFE_CYCLE_OBSERVER_GROUP]: '<%= group %>'}})
export class <%= className %> implements LifeCycleObserver {
  /*
  constructor(
    @inject(CoreBindings.APPLICATION_INSTANCE) private app: Application,
  ) {}
  */

  /**
   * This method will be invoked when the application starts
   */
  async start(): Promise<void> {
    // Add your logic for start
  }

  /**
   * This method will be invoked when the application stops
   */
  async stop(): Promise<void> {
    // Add your logic for start
  }
}
